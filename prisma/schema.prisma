// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User{
  id String @id @unique
  email String
  firtName String
  lastName String
  profileImage String
  createdAt DateTime @default(now())
  customerId String? @unique
  Site Site[]
  posts Post[]
   stripeSubscriptionId String?
  Subscription Subscription?

} 

model Site{
 id String @id @default(uuid())
 name String
 description String
 subdirectory String @unique
 createdAt DateTime @default(now())
 updateAt DateTime @updatedAt
 imageUrl String? 
 userId String
 User User? @relation(fields: [userId],references: [id])
 posts Post[]
}

model Post{
  id String @id @default(uuid())  
  title String
  articleContent Json
  smallDescription String
   image            String
  slug String @unique
  createdAt DateTime @default(now())
 updateAt DateTime @updatedAt
 userId String?
 User User? @relation(fields: [userId], references: [id])
 siteId String?
 Site Site?  @relation(fields: [siteId],references: [id],onDelete:  Cascade)
 
}

model Subscription{
  stripeSubscriptionId String @id @unique
  interval String
  status String
  planId String
  currentPeriodStart Int
  currentPeriodEnd Int
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId String? @unique
  User User? @relation(fields: [userId], references: [id])
}

